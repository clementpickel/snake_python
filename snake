#!/usr/bin/python3

import pygame
import time

pygame.init()

# Définir la taille de la fenêtre
window_width = 800
window_height = 600
window = pygame.display.set_mode((window_width, window_height))
pygame.display.set_caption("Snake Game")

# Couleurs
white = (255, 255, 255)
black = (0, 0, 0)
red = (255, 0, 0)

# Variables du serpent
snake_block_size = 10
snake_speed = 10

font_style = pygame.font.SysFont(None, 50)
score_font = pygame.font.SysFont(None, 35)

def message(str, tuple):
    print(str)
    exit(0)

def gameLoop():
    game_over = False
    game_close = False

    # Initialisation des coordonnées du serpent
    x1 = window_width / 2
    y1 = window_height / 2
    x1_change = 0
    y1_change = 0

    clock = pygame.time.Clock()


    # Boucle de jeu
    while not game_over:
        # Boucle de gestion des événements
        while game_close == True:
            # Affichage du score final
            window.fill(black)
            message("Vous avez perdu ! Appuyez sur C pour continuer ou Q pour quitter", red)
            pygame.display.update()

            # Gestion des événements du clavier pour rejouer ou quitter
            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_c:
                        gameLoop()

        # Gestion des événements du clavier pour les déplacements du serpent
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x1_change = -snake_block_size
                    y1_change = 0
                elif event.key == pygame.K_RIGHT:
                    x1_change = snake_block_size
                    y1_change = 0
                elif event.key == pygame.K_UP:
                    y1_change = -snake_block_size
                    x1_change = 0
                elif event.key == pygame.K_DOWN:
                    y1_change = snake_block_size
                    x1_change = 0

        # Mise à jour des coordonnées du serpent
        x1 += x1_change
        y1 += y1_change

        # Gestion des limites de la fenêtre
        if x1 >= window_width or x1 < 0 or y1 >= window_height or y1 < 0:
            game_close = True

        # Mise à jour de l'écran
        window.fill(black)
        pygame.draw.rect(window, white, [x1, y1, snake_block_size, snake_block_size])
        pygame.display.update()

        # Définition de la vitesse du jeu
        clock.tick(snake_speed)

    pygame.quit()
    quit()

gameLoop()
